"use strict";(self.webpackChunkmemory_docs=self.webpackChunkmemory_docs||[]).push([[2981],{7928:(e,a,r)=>{r.r(a),r.d(a,{assets:()=>o,contentTitle:()=>i,default:()=>l,frontMatter:()=>d,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"diagrams/game-flow","title":"Game Flow Diagram","description":"","source":"@site/docs/diagrams/game-flow.md","sourceDirName":"diagrams","slug":"/diagrams/game-flow","permalink":"/memory-docs/diagrams/game-flow","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{"id":"game-flow","title":"Game Flow Diagram"},"sidebar":"tutorialSidebar","previous":{"title":"Entities","permalink":"/memory-docs/architecture"}}');var n=r(3420),s=r(8356);const d={id:"game-flow",title:"Game Flow Diagram"},i=void 0,o={},c=[];function m(e){const a={mermaid:"mermaid",...(0,s.R)(),...e.components};return(0,n.jsx)(a.mermaid,{value:'%%{init: {\n  "theme": "default",\n  "themeVariables": {\n    "fontSize": "11px"\n  },\n  "flowchart": {\n    "curve": "linear",\n    "nodeSpacing": 20,\n    "rankSpacing": 20,\n    "padding": 2\n  }\n}}%%\ngraph TD\n    A["User Clicks Card"] --\x3e B["Board dispatches flipCard(cardId)"]\n    B --\x3e C["Board reducer flips card + adds to flippedCardIds"]\n    C --\x3e D["GameHandler observes flipped cards"]\n    D --\x3e E{"Do cards match?"}\n    E -- Yes --\x3e F["Dispatch cardsMatched"]\n    E -- No --\x3e G["Dispatch cardsNotMatched after delay"]\n    F --\x3e H["Update matched state in reducer"]\n    G --\x3e I["Flip both cards back in reducer"]\n    F --\x3e J["Game reducer increments move count"]\n    G --\x3e J\n    J --\x3e K{"All cards matched?"}\n    K -- Yes --\x3e L["Dispatch gameWon"]\n    K -- No --\x3e M["Wait for next move"]'})}function l(e={}){const{wrapper:a}={...(0,s.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}}}]);